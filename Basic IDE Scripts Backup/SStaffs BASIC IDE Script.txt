Rem --- eWON start section: Cyclic Section
eWON_cyclic_section:
Rem --- eWON user (start)

Rem --- eWON user (end)
End
Rem --- eWON end section: Cyclic Section
Rem --- eWON start section: Init Section
ewon_init_section:
Rem --- eWON user (start)
pcs_h_str$ = ""
pcs_m_str$ = "" 
pcs_s_str$ = "" 
pcs_time_str$ = ""
pcs_time% = 0

day_of_week% = 0

email_sent_UPS% = 0
start_email_timer% = 0
email_warning% = 0
UPS_email_customer% = 0
ftp_counter% = 0

  NL$ = (CHR$(13)+CHR$(10))
  NP$ = NL$ + NL$   

E1$ = "tom.csmith@powerstar.com"
E2$ = "solon.mardapittas@powerstar.com"

day_of_week% = 0
pcs_timer_end_1% = 0
pcs_timer_end_2% = 0

charge_limit = 94
discharge_limit = 25

upper_soc = 95
lower_soc = 13
SoC_Limit_Low%  = 180 // 18% 
SoC_Limit_Low_Safe% = 200 // 20%
SoC_Limit_High% = 920 // 92% 
SoC_Limit_High_Safe% = 900 // 90%
Service_State% = 0
Set_On% = 0 
Level_Dir% = 0
Import_ok% = 0
Export_ok% = 0
Import_P = 0
Export_P = 0
soc_dif = 0
min_soc = 0
max_soc = 0

TSET 1,1
TSET 2,2
TSET 3,3
TSET 4,3

ONDATE 3,"1 0 * * MON","ftp_counter% = 1"//"GOTO SendData" // Every Sunday at 11:50 PM
//ONDATE 3,"* * * * *","ftp_counter% = 1"//"GOTO SendData" // Every Sunday at 11:50 PM

ONCHANGE "BMS_CON","b% = BMS_CON@:c%=10:GOSUB WriteFct06" :REM b% = value to write,c% = tag address

ONTIMER 1, "goto Fault_Check" // Also sets up the PCS Time String
ONTIMER 3, "goto FTP_Check"
ONTIMER 4, "goto Run_Service"
//ONTIMER 2, "goto Power_Follow"
//ONTIMER ?, "goto charge_limiter"
Rem --- eWON user (end)
End
Rem --- eWON end section: Init Section
Rem --- eWON start section: Check_Faults
Rem --- eWON user (start)
Fault_Check:
If ((ATS_Fault_Word_1@ > 0) OR (PCS_Fault_Word_1@ > 0) OR (PCS_Fault_Word_2@ > 0) OR (Comms_ATS@ <> 1) OR (Comms_PCS@ <> 1)) Then
	Fault_Mem@ = 1
Else
	Fault_Mem@ = 0
ENDIF

I% = ATS_Sys_State@#5 

IF I% = 1 THEN
  ATS_Sys_State_Str@ = 5
ELSE
  I% = ATS_Sys_State@#8 
  IF I% = 1 THEN
    ATS_Sys_State_Str@ = 8
  ELSE
    I% = ATS_Sys_State@#7 
    IF I% = 1 THEN
      ATS_Sys_State_Str@ = 7
    ELSE
      I% = ATS_Sys_State@#6
      IF I% = 1 THEN
        ATS_Sys_State_Str@ = 6
      ELSE
        I% = ATS_Sys_State@#0
        IF I% = 1 THEN
          ATS_Sys_State_Str@ = 0
        ELSE
          I% = ATS_Sys_State@#1
          IF I% = 1 THEN
            ATS_Sys_State_Str@ = 1
          ELSE
            I% = ATS_Sys_State@#2
            IF I% = 1 THEN
              ATS_Sys_State_Str@ = 2
            ELSE        
              I% = ATS_Sys_State@#3
              IF I% = 1 THEN
                ATS_Sys_State_Str@ = 3
              ELSE
                I% = ATS_Sys_State@#4
                IF I% = 1 THEN
                  ATS_Sys_State_Str@ = 4
                ENDIF
              ENDIF
            ENDIF
          ENDIF
        ENDIF  
      ENDIF
    ENDIF
  ENDIF
ENDIF  

ATS_UPS_MODE@ = PCS_Status_1@#13
//ATS_UPS_MODE@ = TEST_MEM@
//ATS_UPS_MODE@ = 1


//E-MAIL Alerts
IF ATS_UPS_MODE@ THEN
  IF (UPS_email_customer% = 0) THEN
    UPS_email_customer% = 1
    //@send_email_cust(UPS_email_customer%)        
  ENDIF  
  
  IF NOT(email_sent_UPS%) THEN
    email_sent_UPS% = 1
    @send_email_eng()
  ENDIF
  
  IF((email_warning% = 0) AND (ATS_SoC@ <= 15)) THEN
    email_warning% = 1
    @send_warning()
  ENDIF
ENDIF


IF NOT(ATS_UPS_MODE@) THEN
    email_warning% = 0
    email_sent_UPS% = 0
    start_email_timer% = 0    
    IF (UPS_email_customer% = 1) THEN
      UPS_email_customer% = 0
      @send_email_cust(UPS_email_customer%)    
  ENDIF
ENDIF

IF email_sent_UPS% THEN
  IF start_email_timer% = 0 THEN
    start_email_timer% = 1
    time_save% = GETSYS PRG, "TIMESEC"
  ENDIF
    
  IF start_email_timer% = 1 THEN
    current_time% = GETSYS PRG, "TIMESEC"
    IF ((current_time% - time_save%) >= (20 * 60)) THEN
      start_email_timer% = 0
      email_sent_UPS% = 0
    ENDIF
    //print current_time% - time_save%
  ENDIF
ENDIF
     
  
  
// Get day of week
time_val$ = TIME$
day_of_week% = DOW time_val$ 

// Gets PCS Time
pcs_h_str$ = SFMT PCS_TIME_H@,30,0,"%1d"
pcs_m_str$ = SFMT PCS_TIME_Min@,30,0,"%1d"
pcs_s_str$ = SFMT PCS_TIME_S@,30,0,"%1d"


pcs_time_str$ = pcs_h_str$ + ":" + pcs_m_str$ + ":" + pcs_s_str$
pcs_time% = FCNV pcs_time_str$,40

Goto Fault_Bits
Rem --- eWON user (end)
End
Rem --- eWON end section: Check_Faults
Rem --- eWON start section: return_to_standby
Rem --- eWON user (start)
FUNCTION rtn_to_standby
  IF (PCS_Set_Mode@ <> 5) THEN
      PCS_Set_Mode@ = 4
      Print "Return to stanby mode: ";
      Print PCS_Set_Mode@
  ENDIF
ENDFN
Rem --- eWON user (end)
End
Rem --- eWON end section: return_to_standby
Rem --- eWON start section: Fault Bits
Rem --- eWON user (start)
Fault_Bits:

ATS_Fault_1@ = ATS_Fault_Word_1@#0
ATS_Fault_2@ = ATS_Fault_Word_1@#1
ATS_Fault_3@ = ATS_Fault_Word_1@#2
ATS_Fault_4@ = ATS_Fault_Word_1@#3
ATS_Fault_5@ = ATS_Fault_Word_1@#10
ATS_Fault_6@ = ATS_Fault_Word_1@#11
ATS_Fault_7@ = ATS_Fault_Word_1@#13
ATS_Fault_8@ = ATS_Fault_Word_1@#14
ATS_Fault_9@ = ATS_Fault_Word_1@#15
ATS_Fault_10@ = ATS_Fault_Word_1@#17
ATS_Fault_11@ = ATS_Fault_Word_1@#18
ATS_Fault_12@ = ATS_Fault_Word_1@#21
ATS_Fault_13@ = ATS_Fault_Word_1@#22
ATS_Fault_14@ = ATS_Fault_Word_1@#23
ATS_Fault_15@ = ATS_Fault_Word_1@#24
ATS_Fault_16@ = ATS_Fault_Word_1@#25
ATS_Fault_17@ = ATS_Fault_Word_1@#26
ATS_Fault_18@ = ATS_Fault_Word_1@#27
ATS_Fault_19@ = ATS_Fault_Word_1@#28
ATS_Fault_20@ = ATS_Fault_Word_1@#29

PCS_Fault_1@ = PCS_Fault_Word_1@#0
PCS_Fault_2@ = PCS_Fault_Word_1@#1
PCS_Fault_3@ = PCS_Fault_Word_1@#2
PCS_Fault_4@ = PCS_Fault_Word_1@#3
PCS_Fault_5@ = PCS_Fault_Word_1@#4
PCS_Fault_6@ = PCS_Fault_Word_1@#5
PCS_Fault_7@ = PCS_Fault_Word_1@#6
PCS_Fault_8@ = PCS_Fault_Word_1@#7
PCS_Fault_9@ = PCS_Fault_Word_1@#8
PCS_Fault_10@ = PCS_Fault_Word_1@#9
PCS_Fault_11@ = PCS_Fault_Word_1@#10
PCS_Fault_12@ = PCS_Fault_Word_1@#11
PCS_Fault_13@ = PCS_Fault_Word_1@#12
PCS_Fault_14@ = PCS_Fault_Word_1@#13
PCS_Fault_15@ = PCS_Fault_Word_1@#14
PCS_Fault_16@ = PCS_Fault_Word_1@#15
PCS_Fault_17@ = PCS_Fault_Word_1@#16
PCS_Fault_18@ = PCS_Fault_Word_1@#17
PCS_Fault_19@ = PCS_Fault_Word_1@#18
PCS_Fault_20@ = PCS_Fault_Word_1@#19
PCS_Fault_21@ = PCS_Fault_Word_1@#20
PCS_Fault_22@ = PCS_Fault_Word_1@#21
PCS_Fault_23@ = PCS_Fault_Word_1@#22
PCS_Fault_24@ = PCS_Fault_Word_1@#23
PCS_Fault_25@ = PCS_Fault_Word_1@#24
PCS_Fault_26@ = PCS_Fault_Word_1@#25
PCS_Fault_27@ = PCS_Fault_Word_1@#26
PCS_Fault_28@ = PCS_Fault_Word_1@#27
PCS_Fault_29@ = PCS_Fault_Word_1@#28

PCS_Fault_30@ = PCS_Fault_Word_2@#0
PCS_Fault_31@ = PCS_Fault_Word_2@#1
PCS_Fault_32@ = PCS_Fault_Word_2@#2
PCS_Fault_33@ = PCS_Fault_Word_2@#3
PCS_Fault_34@ = PCS_Fault_Word_2@#4
PCS_Fault_35@ = PCS_Fault_Word_2@#5
PCS_Fault_36@ = PCS_Fault_Word_2@#6
PCS_Fault_37@ = PCS_Fault_Word_2@#9
PCS_Fault_38@ = PCS_Fault_Word_2@#10
PCS_Fault_39@ = PCS_Fault_Word_2@#11
PCS_Fault_40@ = PCS_Fault_Word_2@#15
PCS_Fault_41@ = PCS_Fault_Word_2@#16
PCS_Fault_42@ = PCS_Fault_Word_2@#17
PCS_Fault_43@ = PCS_Fault_Word_2@#18
PCS_Fault_44@ = PCS_Fault_Word_2@#19
PCS_Fault_45@ = PCS_Fault_Word_2@#20
Rem --- eWON user (end)
End
Rem --- eWON end section: Fault Bits
Rem --- eWON start section: email
Rem --- eWON user (start)
// 20 Minute info
FUNCTION send_email_eng  
  IF (PCS_DC_P@ > 0) THEN
    divisor% = PCS_DC_P@
    meter_float = PCS_DC_P@
  ELSE
    divisor% = Meter_Load_Act_Pow@
    meter_float = Meter_Load_Act_Pow@
  ENDIF

  ups_time% = (284 * 60 * (ATS_SoC@ / 100) * (ATS_SoH@ / 100) * 0.9) / meter_float
  M2$ = SFMT ups_time%,30,0,"%1d"  
  M3$ = SFMT meter_float,20,4,"%f"
  SOC$ =  SFMT ATS_SoC@,20,4,"%f"
  
  M1$ = "Virtue UPS Mode Alert" + NL$ + "UPS Mode: Activated" + NP$ + "You have "  
  M1$ = M1$ + M2$ + " minutes of power left at the current load of " + M3$ + " kW"
  M1$ = M1$ + NP$ + "State of Charge is: " + SOC$ + "%"
   
  Message$ = M1$   
 
  //SENDMAIL E1$, E2$;E3$, "Virtue UPS Mode Alert", Message$
  SENDMAIL E1$, E2$;E3$, "Virtue UPS Mode Alert", Message$
  Print"Engineer email sent"
ENDFN

// Back to normal
FUNCTION send_email_cust($ups_mode%)  
  Mes1$ = "Virtue Customer Notification" + NP$ + "UPS "
  Mes2$ = ""
  IF($ups_mode% = 0) THEN
    Mes2$ = "Deactivated. Mains Power restored"+ NP$ + "System status: Standby"
  ELSE
    Mes2$ = "Activated, Facility running on batteries" + NP$ + "System status: Running"
  ENDIF  
  
   
  Msg$ = Mes1$ + Mes2$ 
  //SENDMAIL E1$, "solon.mardapittas@powerstar.com;lee.hudson@powerstar.com", "Virtue UPS Mode Alert", Msg$
  SENDMAIL E1$, E2$;E3$, "Virtue UPS Mode Alert", Msg$
  
  Print"Customer email sent"
  
 //@send_email_cust()
ENDFN


// Low Battery Warning
FUNCTION send_warning()    
  IF (PCS_DC_P@ > 0) THEN
    divisor% = PCS_DC_P@
    meter_float = PCS_DC_P@
  ELSE
    divisor% = Meter_Load_Act_Pow@
    meter_float = Meter_Load_Act_Pow@
    IF(divisor% < 1) THEN
      divisor% = 1
    ENDIF  
  ENDIF
  
  ups_time% = (36 * 60 * (ATS_SoC@ / 100) * (ATS_SoH@ / 100) * 0.9) / divisor%  
  M2$ = SFMT ups_time%,30,0,"%1d"
  M3$ = SFMT meter_float,20,4,"%f" 
  SOC$ =  SFMT ATS_SoC@,20,4,"%f" 
  
  M1$ = "Virtue UPS Mode Alert" + NL$ + "Battery Low Warning" + NP$ + "You have "  
  M1$ = M1$ + M2$ + " minutes of power left at the current load of " + M3$ + " kW"
  M1$ = M1$ + NP$ + "State of Charge is: " + SOC$ + "%"   
  MW$ = "Recommended Action: Shut down critical applications"
  M1$ = M1$ + NP$ + MW$
  Message$ = M1$  
 
 //SENDMAIL "tom.csmith@powerstar.com", "solon.mardapittas@powerstar.com;lee.hudson@powerstar.com", "Virtue UPS LOW BATTERY WARNING", Message$
 SENDMAIL E1$, E2$;E3$, "Virtue UPS LOW BATTERY WARNING", Message$

  Print"15% Warning email sent"
ENDFN
Rem --- eWON user (end)
End
Rem --- eWON end section: email
Rem --- eWON start section: charge_limits
Rem --- eWON user (start)
charge_limiter:
REM */ This stop the battery from overcharging */
IF ATS_SoC@ >= charge_limit THEN 

	IF ((PCS_Set_Mode@ = 3) AND (PCS_Set_CP_AC@ < 0)) THEN
		Print "High SoC"
    @rtn_to_standby()
	ENDIF
	
	IF ((PCS_Set_Mode@ = 2) AND (PCS_Set_CP_DC@ < 0)) THEN
		Print "High SoC"
    @rtn_to_standby()
	ENDIF
	
	IF ((PCS_Set_Mode@ = 0) AND (PCS_Set_CC@ < 0)) THEN
		Print "High SoC"
    @rtn_to_standby()
	ENDIF
	
	IF ((PCS_Set_Mode@ = 1) AND (PCS_Set_CV@	>= BMS_Voltage@)) THEN
		Print "High SoC"
    @rtn_to_standby()
	ENDIF
ENDIF
REM */ This stop the battery from undercharging */
IF ATS_SoC@ <= discharge_limit THEN 

	IF ((PCS_Set_Mode@ = 3) AND (PCS_Set_CP_AC@ > 0)) THEN
		Print "Low SoC"
    @rtn_to_standby()
	ENDIF
	
	IF ((PCS_Set_Mode@ = 2) AND (PCS_Set_CP_DC@ > 0)) THEN
		Print "Low SoC"
    @rtn_to_standby()
	ENDIF
	
	IF ((PCS_Set_Mode@ = 0) AND (PCS_Set_CC@ > 0)) THEN
		Print "Low SoC"
    @rtn_to_standby()
	ENDIF
	
	IF ((PCS_Set_Mode@ = 1) AND (PCS_Set_CV@	<= BMS_Voltage@)) THEN
		Print "Low SoC"
    @rtn_to_standby()
	ENDIF
ENDIF

//goto charge_cycle

  


Rem --- eWON user (end)
End
Rem --- eWON end section: charge_limits
Rem --- eWON start section: power_following
Rem --- eWON user (start)
Power_Follow:


IF  (ATS_Time_H@ >= 16) AND (ATS_Time_H@ <= 19) AND (ATS_SoC@ > discharge_limit)  THEN
  IF PCS_Set_Mode@ <> 3 THEN
    PCS_Set_Mode@ = 3
  ENDIF
    power_follow_val% = Meter_Load_Act_Pow@
    power_follow_val% = power_follow_val% * 17/2 // x 0.9 x 10
    Print power_follow_val%
    ATS_Power_0@ = power_follow_val%
    PCS_Set_CP_AC@ = ATS_Power_0@
  
ELSE
	IF  (ATS_Time_H@ >= 1) AND (ATS_Time_H@ <= 7) AND (ATS_SoC@ < charge_limit) THEN
    IF (PCS_Set_Mode@ <> 3) THEN
      PCS_Set_Mode@ = 3  
    ENDIF
    
    PCS_Set_CP_AC@ = -500
   
 // ELSE
 //   IF (PCS_Set_Mode@ = 3) THEN
 //     Print "Low SoC"
 //     @rtn_to_standby()
 //   ENDIF
 // ENDIF
ENDIF

Rem --- eWON user (end)
End
Rem --- eWON end section: power_following
Rem --- eWON start section: BMS Contactor
Rem --- eWON user (start)

WriteFct06:
 B$ = "1,10.0.1.235" : REM : MODBUS ID[,IPAddress]
 Z$ = SFMT b%,10,2 : REM : b% = VALUE RO WRITE

  debug = 1
  A$ = Chr$(06)
  a% = c%
  a% = a% AND 65535
  A$ = A$ + Chr$(a%/256)+Chr$(a% MOD 256)
  A$ = A$ + Z$
  a% = Iosend "MODBUS",B$,A$

  If (debug) Then
    For i%=1 To LEN(A$)
      j%=ASCII(A$(i%))
      X$ = SFMT j%,30,0,"%X"
      Print X$;" ";
    Next i%
    Print ""
    Print B$
  Endif

  REM : Read Response
  Wait_IO_End_2:
  b% = Iorcv a%,1
  If b%=-1 Then
    Print "waiting"
    Goto Wait_IO_End_2
  Endif
  
  B$ = Iorcv a%

  If (B$=A$(1 To 5)) Then
    Print "Write OK"
  Else
    Print "Write Failed"
  Endif

RETURN
Rem --- eWON user (end)
End
Rem --- eWON end section: BMS Contactor
Rem --- eWON start section: FTP Check
Rem --- eWON user (start)
FTP_Check:
IF ftp_counter% > 0 THEN
  IF ftp_counter% > 8 THEN
    ftp_counter% = 0
  ELSE    
    ftp_counter% = ftp_counter% + 1
    Print "FTP Count: ";
    Print ftp_counter%
    Goto SendData    
  ENDIF
ENDIF
Rem --- eWON user (end)
End
Rem --- eWON end section: FTP Check
Rem --- eWON start section: FTP
Rem --- eWON user (start)
SendData:

T$ = Time$
year$ = T$(7 To 10)
mon$ = T$(4 To 5)
date$ = T$(1 To 2)
hour$ = T$(12 To 13)
min$ = T$(15 To 16)
sec$ = T$(18 To 19)

IF ftp_counter% = 2 THEN
  File1$ = "South Staffs/SoC-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File1$,"[$dtHL $ftT $st_d7 $et_s0 $tnATS_SoC]"
  Print "FTP 1"
ENDIF

IF ftp_counter% = 3 THEN
  File2$ = "South Staffs/BMS_Voltage-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File2$,"[$dtHL $ftT $st_d7 $et_s0 $tnBMS_Voltage]"
  Print "FTP 2"
ENDIF

IF ftp_counter% = 4 THEN
  File3$ = "South Staffs/BMS_Current-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File3$,"[$dtHL $ftT $st_d7 $et_s0 $tnBMS_Current]"
  Print "FTP 3"
ENDIF

IF ftp_counter% = 5 THEN
  File4$ = "South Staffs/BMS_Max_Volt-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File4$,"[$dtHL $ftT $st_d7 $et_s0 $tnBMS_Max_Volt]"
  Print "FTP 4"
ENDIF

IF ftp_counter% = 6 THEN
  File5$ = "South Staffs/BMS_Min_Volt-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File5$,"[$dtHL $ftT $st_d7 $et_s0 $tnBMS_Min_Volt]"
  Print "FTP 5"
ENDIF

IF ftp_counter% = 7 THEN
  File6$ = "South Staffs/BMS_Max_Temp-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File6$,"[$dtHL $ftT $st_d7 $et_s0 $tnBMS_Max_Temp]"
  Print "FTP 6"
ENDIF

IF ftp_counter% = 8 THEN
  File7$ = "South Staffs/BMS_Min_Temp-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File7$,"[$dtHL $ftT $st_d7 $et_s0 $tnBMS_Min_Temp]"
  Print "FTP 7"
ENDIF


Rem --- eWON user (end)
End
Rem --- eWON end section: FTP
Rem --- eWON start section: RUn_Service
Rem --- eWON user (start)
Run_Service:
IF (PCS_Set_Mode@ = 3) OR (PCS_Set_Mode@ = 4)THEN		
			PCS_Run_OK@ = 1  // running service... 	
Else
      PCS_Run_OK@ = 0
ENDIf

If PCS_Run_OK@ = 1 THEN   // only run when on mode 3
   // Limit charge or discharge at soc limit level
   IF (ATS_SOC@ < 18.0) THEN	//AND 
			ATS_SOC_Low@ = 1	
			ATS_SOC_Ok@ = 0  // No running service... l.e
      PCS_Set_Mode@ = 3
			PCS_Set_CP_AC@  = -500
   ENDIF
IF (ATS_SOC@ >= 20.0) AND (ATS_SOC_Low@ = 1) THEN		
			ATS_SOC_Low@ = 0	
			ATS_SOC_Ok@ = 1  // running service... 
      PCS_Set_Mode@ = 3
			PCS_Set_CP_AC@  = 0
ENDIF
 
IF (ATS_SOC@ > 92.0) THEN		// AND (EMS_SOC_High@ = 0)
			ATS_SOC_High@ = 1	
			ATS_SOC_Ok@ = 0  // No running service... 
      PCS_Set_Mode@ = 3
			PCS_Set_CP_AC@  = 500
ENDIF
IF (ATS_SOC@ <= 90.0) AND (ATS_SOC_High@ = 1) THEN		
			ATS_SOC_High@ = 0	
			ATS_SOC_Ok@ = 1  // running service... 
      PCS_Set_Mode@ = 3
			PCS_Set_CP_AC@  = 0
ENDIf

IF (ATS_SOC_Low@ = 0) AND (ATS_SOC_High@ = 0) THEN		
			ATS_SOC_Ok@ = 1  // running service... 		
ENDIf

Print ATS_SOC_Ok@

// Import export limit check
Import_P = 350.0 - Meter_Load_Act_Pow@     // MAX import power
IF Meter_Supply_Act_Pow@ < 90 Then          // MAX export power
   Export_P = 90 + Meter_Supply_Act_Pow@
ELSE
   Export_P = 90
ENDIf
// import export status
If Import_P >= 50 Then 
    Import_ok% = 1
Else
   Import_ok% = 0
ENDIF
    
If Export_P >= 70 Then 
    Export_ok% = 1
Else
    Export_ok% = 0
ENDIF

Print Import_ok%
Print Export_ok%

// Determin DUoS red, amber and Green window
IF (ATS_Time_H@ >= 8) AND (ATS_Time_H@ < 16) THEN 
	 Service_State%     = 1            // morning amber window
ENDIF
IF (ATS_Time_H@ >= 16) AND (ATS_Time_H@ < 19) THEN
	 Service_State%     = 2           // red window
ENDIF  
IF (ATS_Time_H@ >= 19) AND (ATS_Time_H@ < 22) THEN
	 Service_State%     = 3          // evening amber window
ENDIF
IF (ATS_Time_H@ >= 22) OR (ATS_Time_H@ < 8) THEN
	 Service_State%     = 4         // green window
ENDIF


IF ATS_SOC_Ok@ = 1 THEN          // if soc within correct level...
   
   IF Service_State% = 1 THEN            // if it's in the morning amber window....
		      IF (ATS_SOC@ < 85.0) THEN               // if soc is below safe limit high, charge and be ready fo DUoS
			       If  Import_ok% = 1 THEN          // limit to import power
                 PCS_Set_Mode@ = 3
                 PCS_Set_CP_AC@  = -500   
              ELSE
                PCS_Set_Mode@ = 3
                 PCS_Set_CP_AC@  = 0 
              ENDIF  
          ELSE                                               // else do nothing
			       IF (ATS_SOC@  >= 92.0) THEN
                 PCS_Set_Mode@ = 3
                 PCS_Set_CP_AC@  = 0	
             ENDIF
		      ENDIF 	  
		   Set_On%   = 0                             // Clear Set flag ready for DUoS at 16h30
   ENDIF
   //
   
  If Service_State% = 2 THEN        // 16h00 ready for DUoS discharge
	   IF ((ATS_Time_H@ = 16) AND (ATS_Time_Min@ = 30)) Or (ATS_Time_H@ >= 17) THEN                   // Start discharge at 16h30
		    Set_On%   = 1
	   ENDIF
	   IF  Set_On% THEN	     
		    IF  (ATS_SOC@ >= 20.0) THEN    // check low limit is not breach and discharge at 250KW		
			     If Export_ok% = 1 THEN          // limit to export power
             PCS_Set_Mode@ = 3
             PCS_Set_CP_AC@  = 700   
           ELSE
              PCS_Set_Mode@ = 3
              PCS_Set_CP_AC@  = 0 
           ENDIF   
		    ELSE
            PCS_Set_Mode@ = 3
			      PCS_Set_CP_AC@  = 0 
            Set_On% = 0	
		    ENDIF
	   ENDIF
  ENDIF
  //
  
   IF Service_State% = 3 THEN            // if it's in the evening amber window....
      PCS_Set_CP_AC@  = 0
      PCS_Set_Mode@ = 4
   ENDIF
	
 
  If Service_State% = 4 THEN        // 16h00 ready for DUoS discharge
	   IF (ATS_Time_H@ = 22)  THEN                   // Start charge at 22h00
		    Set_On%   = 1
	   ENDIF
	   IF  Set_On% THEN	     
		    IF  (ATS_SOC@ <= 90.0) THEN    // check low limit is not breach and charge at 200KW		
			     If import_ok% = 1 THEN          // limit to export power
               PCS_Set_Mode@ = 3
               PCS_Set_CP_AC@  = -500   
           ELSE
               PCS_Set_Mode@ = 3
               PCS_Set_CP_AC@  = 0 
           ENDIF   
		    ELSE
             PCS_Set_Mode@ = 3
			       PCS_Set_CP_AC@  = 0 
            Set_On% = 0	
		    ENDIF
	   ENDIF
  ENDIF
ENDIF

ENDIF
Rem --- eWON user (end)
End
Rem --- eWON end section: RUn_Service