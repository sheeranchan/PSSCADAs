Rem --- eWON start section: Cyclic Section
Rem --- eWON user (start)
Rem --- eWON user (end)
End
Rem --- eWON end section: Cyclic Section
Rem --- eWON start section: Init Section
eWON_init_section:
Rem --- eWON user (start)
upper_soc = 95
lower_soc = 13
DUOS_Limit = 23
DUOS_Limit = 23
desired_soc = 50
PCS_FAULT_FLAG% = 0
charge_50% = 0
discharge_50% = 0
//duos_finished% = 1
faults1% = 0
faults2% = 0
faults3% = 0
faults4% = 0
 
HOUR$ = "0"
MINUTE$ = "0"
DAY_1$ = "0"
MONTH_1$ = "0"
YEAR_1$ = "0"
 
upper_limit_reached% = 0
lower_limit_reached% = 0
email_sent_UPS% = 0
start_email_timer% = 0
email_warning% = 0
UPS_email_customer% = 0
ftp_counter% = 1
NL$ = (CHR$(13)+CHR$(10))
NP$ = NL$ + NL$   
//E1$ = "sheeran.chen@powerstar.com"
//E2$ = "sheeran.chen@powerstar.com"
E1$ = "olivia.zeng@powerstar.com;sheeran.chen@powerstar.com;solon.mardapittas@powerstar.com;IJThain@bemis.com;TKitching@bemis.com;"//160-DL-VIRTUE@Bemis.com
E1$ = E1$ + "mswallow@bemis.com;MABird2@Bemis.com;sdixon@bemis.com;IHaigh@bemis.com;MGHudson@bemis.com;JJHyke@bemis.com;PJewitt@Bemis.com;cjnorman@bemis.com;SOveral@bemis.com;DFPymm@bemis.com;MCaddick@bemis.com"
E2$ = "olivia.zeng@powerstar.com;sheeran.chen@powerstar.com;solon.mardapittas@powerstar.com;"
E2$ = E2$ + "TKitching@bemis.com;JCRock@Bemis.com;PSeifert@Bemis.com;MThomas@Bemis.com;jtomlin@bemis.com;APRESS522@Bemis.com;APRESS523@Bemis.com;app-160-extrusion@Bemis.com;AHaslett@bemis.com;JMiddlemas@Bemisco.net;LShipperbottom@Bemis.com"
SoC_Limit_Low%  = 180 // 18% 
SoC_Limit_Low_Safe% = 200 // 20%
SoC_Limit_High% = 920 // 92% 
SoC_Limit_High_Safe% = 900 // 90%
Service_State% = 0
Set_On% = 0 
Level_Dir% = 0
Import_ok% = 0
Export_ok% = 0
Import_P = 0
Export_P = 0
soc_dif = 0
min_soc = 0
max_soc = 0
TSET 1,1
TSET 2,5
TSET 3,2
TSET 4,6 //updated by Olivia 2020.07.13 increase from 3 to 6 
ONCHANGE "EMS_SoC_1","goto ups_alert"
ONCHANGE "EMS_System_Status","goto ups_alert"
//ONDATE 4,"1 0 * * MON","ftp_counter% = 1"//"GOTO SendData" // Every Sunday at 11:50 PM
ONDATE 5,"28 23 * * *","goto SendAllData"
//ONDATE 6,"55 23 28-31 * *","GOTO PS_FTP" 
ONDATE 6,"5 0 1 * *","GOTO PS_FTP" 
ONSTATUS "goto Status"
putFtpId% = 0
getFtpId% = 0
//ONDATE 4,"* * * * *","ftp_counter% = 1" // Every minute
ONTIMER 1, "goto ups_alert"
//ONTIMER 2, "goto DUoS"
//ONTIMER 2, "goto Email_Check"
ONTIMER 3, "goto Faults_Calc"
ONTIMER 4, "goto Run_service"
///ONTIMER 2, "GOTO Check_Comms"
 
//Goto "test123"
Rem --- eWON user (end)
End
Rem --- eWON end section: Init Section
Rem --- eWON start section: Run Service
Rem --- eWON user (start)
Run_service:
//Metering Reading Calculation added by Olivia on 2020.05.22
Meter_Supply_Active_Power@=HMI_Active_Power@ + 10 - PCS_1_Pact@ - PCS_2_Pact@ - PCS_3_Pact@ //Metering Reading Calculation added by Olivia on 2020.05.22
Meter_Load_Active_Power@=HMI_Active_Power@ //Metering Reading Calculation added by Olivia on 2020.05.22
Print "Meter reading calculation done" //Metering Reading Calculation added by Olivia on 2020.05.22
Meter_Supply_Iph1@=1.732*1000*Meter_Supply_Active_Power@/PCS_1_Vab@/3  //supply phase current Reading Calculation added by Olivia on 2020.07.22
Meter_Supply_Iph2@=1.732*1000*Meter_Supply_Active_Power@/PCS_1_Vbc@/3  //supply phase current Reading Calculation added by Olivia on 2020.07.22
Meter_Supply_Iph3@=1.732*1000*Meter_Supply_Active_Power@/PCS_1_Vca@/3  //supply phase current Reading Calculation added by Olivia on 2020.07.22
Meter_Supply_Vph1@=PCS_1_Vab@/1.732 //supply phase voltage Reading Calculation for trend added by Olivia on 2020.07.22
Meter_Supply_Vph2@=PCS_1_Vab@/1.732 //supply phase voltage Reading Calculation for trend added by Olivia on 2020.07.22
Meter_Supply_Vph3@=PCS_1_Vab@/1.732 //supply phase voltage Reading Calculation for trend added by Olivia on 2020.07.22
// workout min and max SOC
min_soc = EMS_SoC_1@
IF EMS_SoC_2@ < min_soc THEN
   min_soc = EMS_SoC_2@
ENDIF 
IF EMS_SoC_3@ < min_soc THEN
   min_soc = EMS_SoC_3@
ENDIF
	
max_soc = EMS_SoC_1@
IF EMS_SoC_2@ > max_soc THEN
   max_soc = EMS_SoC_2@
ENDIF 
IF EMS_SoC_3@ > max_soc THEN
   max_soc = EMS_SoC_3@
ENDIF
// Limit charge or discharge at soc limit level
IF (min_soc <= 18.0) THEN	//AND (EMS_SOC_Low@ =0)	//update by Olivia 2020.07.13
			EMS_SOC_Low@ = 1	
			EMS_SOC_Ok@ = 0  // No running service... l.e
			EMS_Power_Setpoint@  = -2000
ENDIF
IF (min_soc >= 20.0) AND (max_soc <= 90.0)  THEN		//AND (EMS_SOC_Low@ = 1) //update by Olivia 2020.07.13
			EMS_SOC_Low@ = 0	
			EMS_SOC_High@ = 0	//update by Olivia 2020.07.13
      EMS_SOC_Ok@ = 1  // No running service... l.e
			EMS_Power_Setpoint@  = 0
ENDIF
 
IF (max_soc >= 92.0) THEN		// AND (EMS_SOC_High@ = 0) 
			EMS_SOC_High@ = 1	//
			EMS_SOC_Ok@ = 0  // No running service... l.e
			EMS_Power_Setpoint@  = 2000
ENDIF
// Determin DUoS red, amber and Green window
IF (EMS_Time_H@ >= 8) AND (EMS_Time_H@ < 16) THEN 
	 Service_State%     = 1            // morning amber window
ENDIF
IF (EMS_Time_H@ >= 16) AND (EMS_Time_H@ < 19) THEN
	 Service_State%     = 2           // red window
ENDIF  
IF (EMS_Time_H@ >= 19) AND (EMS_Time_H@ < 22) THEN
	 Service_State%     = 3          // evening amber window
ENDIF
IF (EMS_Time_H@ >= 22) OR (EMS_Time_H@ < 8) THEN
	 Service_State%     = 4         // green window
ENDIF
Import_P = 1600.0 - Meter_Load_Active_Power@     // MAX import power
IF Meter_Load_Active_Power@ < 300 Then          // MAX export power
   Export_P = Meter_Load_Active_Power@
ELSE
   Export_P = 300
ENDIf
// import export status
If Import_P > 100 Then 
    Import_ok% = 1
Else
   Import_ok% = 0
ENDIF
    
If Export_P > 250 Then 
    Export_ok% = 1
Else
    Export_ok% = 0
ENDIF
IF EMS_SOC_Ok@ = 1 THEN          // if soc within correct level...
   
   IF Service_State% = 1 THEN            // if it's in the morning amber window....
      soc_dif= max_soc - min_soc         // calculate soc difference
      soc_dif= soc_dif/min_soc
      soc_dif= soc_dif * 100 
   
      IF soc_dif >= 5.0 THEN                               // if difference is greater or equal to 5% than...
          IF (max_soc >= 90.0) THEN       // if highest soc greater that 90%, discharge at 100kw
			        If  Export_ok% = 1 THEN          // limit to export power
                  EMS_Power_Setpoint@  = 1000   
              ELSE
                  EMS_Power_Setpoint@  = 0 
              ENDIF
				         Level_Dir% = 1
          ELSE
              IF (max_soc <= 80.0) THEN                // check highest soc, if below 80% than charge at 100KW	
			           If  Import_ok% = 1 THEN          // limit to import power
                     EMS_Power_Setpoint@  = -1000   
                 ELSE
                     EMS_Power_Setpoint@  = 0 
                 ENDIF  
				          Level_Dir% = 0	
			        ELSE                                               // else, continiou with direction set until limit is reached.
				          IF Level_Dir% = 1 THEN
                  	 If  Export_ok% = 1 THEN          // limit to import power
                         EMS_Power_Setpoint@  = 1000   
                     ELSE
                         EMS_Power_Setpoint@  = 0 
                     ENDIF  
                  ELSE
                  	 If  Import_ok% = 1 THEN          // limit to import power
                         EMS_Power_Setpoint@  = -1000   
                     ELSE
                         EMS_Power_Setpoint@  = 0 
                     ENDIF  
                  ENDIF  	
			        ENDIF
          ENDIF
		   ELSE                                                   // if within 5% bounderay...
		      IF (max_soc < 85.0) THEN               // if soc is below safe limit high, charge and be ready fo DUoS
			       If  Import_ok% = 1 THEN          // limit to import power
                 EMS_Power_Setpoint@  = -1000   
              ELSE
                 EMS_Power_Setpoint@  = 0 
              ENDIF  
          ELSE                                               // else do nothing
			       IF (max_soc >= 90.0) THEN
                 EMS_Power_Setpoint@  = 0	
             ENDIF
		      ENDIF 	
		   ENDIF  
		   Set_On%   = 0                             // Clear Set flag ready for DUoS at 16h30
   ENDIF
   //
   
  If Service_State% = 2 THEN        // 16h00 ready for DUoS discharge  
	   IF (EMS_Time_H@ >= 17) AND (EMS_Time_min@ > 00) THEN                   // Start discharge at 17h updated by Olivia on 2020.05.22 
		    Set_On%   = 1
	   ENDIF
	   IF  Set_On% THEN	 
     Print min_soc
		    IF  (min_soc >= 20.0) THEN    // check low limit is not breach and discharge at 250KW		IF  (min_soc >= 20.0) THEN
			     If Export_ok% = 1 THEN          // limit to export power
             EMS_Power_Setpoint@  = Meter_Load_Active_Power@*9 //4000 The Duos is donw by following the load updated by Olivia on 2020.05.22
             Print Meter_Load_Active_Power@
             Print EMS_Power_Setpoint@
           ELSE
              EMS_Power_Setpoint@  = 0 
           ENDIF   
		    ELSE
			      EMS_Power_Setpoint@  = 0 
            Set_On% = 0	
		    ENDIF
     ELSE
        EMS_Power_Setpoint@  = 0  
	   ENDIF 
  ENDIF
  //
//Print EMS_Power_Setpoint@
   IF Service_State% = 3 THEN            // if it's in the evening amber window....
      soc_dif= max_soc - min_soc         // calculate soc difference
      soc_dif= soc_dif/min_soc
      soc_dif= soc_dif * 100 
      
      IF soc_dif >= 5.0 THEN                               // if difference is greater or equal to 5% than...
          IF (min_soc >= 30.0) THEN       // if lowest soc greater that 30%, discharge at 100kw
			        If  Export_ok% = 1 THEN          // limit to export power
                 EMS_Power_Setpoint@  = 1000   
              ELSE
                 EMS_Power_Setpoint@  = 0 
              ENDIF
				         Level_Dir% = 1
          ELSE
              IF (max_soc <= 20.0) THEN                // check lowest soc, if below 280% than charge at 100KW	
			           If  Import_ok% = 1 THEN          // limit to import power
                     EMS_Power_Setpoint@  = -1000   
                 ELSE
                     EMS_Power_Setpoint@  = 0 
                 ENDIF  
				          Level_Dir% = 0	
			        ELSE                                               // else, continiou with direction set until limit is reached.
				          IF Level_Dir% = 1 THEN
                  	 If  Export_ok% = 1 THEN          // limit to import power
                         EMS_Power_Setpoint@  = 1000   
                     ELSE
                         EMS_Power_Setpoint@  = 0 
                     ENDIF  
                  ELSE
                  	 IF  Import_ok% = 1 THEN          // limit to import power
                         EMS_Power_Setpoint@  = -1000   
                     ELSE
                         EMS_Power_Setpoint@  = 0 
                     ENDIF  
                  ENDIF  	
			        ENDIF
          ENDIF
		   ELSE                                                   // if within 5% bounderay...
			    EMS_Power_Setpoint@  = 0	          // else do nothing
		   ENDIF  
		   Set_On%   = 0                             // Clear Set flag ready for DUoS at 16h30
   ENDIF
	
  If Service_State% = 4 THEN        // 16h00 ready for DUoS discharge
  	   IF (EMS_Time_H@ >= 22)  THEN                   // Start charge at 22h00
		    Set_On%   = 1
	     ENDIF       
       
    IF  Set_On% THEN	  
		    IF  (max_soc <= 90.0) THEN    // check low limit is not breach and charge at 200KW		
			     If import_ok% = 1 THEN          // limit to export power
              EMS_Power_Setpoint@  = -2000   
           ELSE
              EMS_Power_Setpoint@  = 0 
           ENDIF   
		    ELSE
			      EMS_Power_Setpoint@  = 0 
            Set_On% = 0	
		    ENDIF
    ENDIF
  ENDIF
  
	
ENDIF
// Print min_soc
// Print max_soc
 
// Print EMS_Time_H@ 
// Print EMS_SOC_Low@
// Print EMS_SOC_High@
// Print EMS_SOC_Ok@ 
Print Service_State% 
//Print Set_On%
Print EMS_Power_Setpoint@
 
Rem --- eWON user (end)
End
Rem --- eWON end section: Run Service
Rem --- eWON start section: Load_Calculator
Rem --- eWON user (start)
DUoS:
IF DUOS_Finished@ = 1 THEN
//IF 0 THEN
//Print DUOS_Finished@
  IF ((EMS_SoC_1@ > DUOS_Limit) AND (EMS_SoC_2@ > DUOS_Limit) AND (EMS_SoC_3@ > DUOS_Limit)) THEN
    EMS_Power_Setpoint@ = Load_Power_D@ * 8//95/10
   // Print EMS_Power_Setpoint@
   // Print Load_Power_D@
  ELSE
    IF EMS_Power_Setpoint@ > 0 THEN
      EMS_Power_Setpoint@ = 0
      DUOS_Finished@ = 0
    ENDIF
  ENDIF
ENDIF
	
  
 
Rem --- eWON user (end)
End
Rem --- eWON end section: Load_Calculator
Rem --- eWON start section: Faults
Rem --- eWON user (start)
Faults_Calc:
IF (Comms_BMS_1@ = 0) OR (Comms_BMS_2@ = 0) OR (Comms_BMS_3@ = 0) OR (Comms_PCS_1@ = 0) OR (Comms_PCS_2@ = 0) OR (Comms_PCS_3@ = 0) OR (Comms_EMS@ = 0) OR (Comms_Powerstar@ = 0) THEN
  faults1% = 1
 ELSE
  faults1% = 0
ENDIF
//EMS Fault alert
faults2% = 0
faults2% = faults2% + EMS_Fault_1@
faults2% = faults2% + EMS_Fault_2@
faults2% = faults2% + EMS_Fault_3@
faults2% = faults2% + EMS_Fault_4@
faults2% = faults2% + EMS_Fault_5@
faults2% = faults2% + EMS_Fault_6@
faults2% = faults2% + EMS_Fault_7@
faults2% = faults2% + EMS_Fault_8@
faults2% = faults2% + EMS_Fault_9@
faults2% = faults2% + EMS_Fault_10@
faults2% = faults2% + EMS_Fault_11@
faults2% = faults2% + EMS_Fault_12@
faults2% = faults2% + EMS_Fault_13@
faults2% = faults2% + EMS_Fault_14@
faults2% = faults2% + EMS_Fault_15@
faults2% = faults2% + EMS_Fault_16@
IF faults2% THEN
   faults2% = 1
 ELSE
   faults2% = 0
ENDIF
//EMS Alarm alert
IF(EMS_Alarm_1@ OR EMS_Alarm_2@ OR EMS_Alarm_3@ OR EMS_Alarm_4@ OR EMS_Alarm_5@ OR EMS_Alarm_6@ OR EMS_Alarm_7@ OR EMS_Alarm_8@) THEN
  faults4% = 1
  ELSE
  faults4% = 0
ENDIF
faults3% = 0
faults3% = faults3% + PCS_1_Fault_1@
faults3% = faults3% + PCS_1_Fault_2@
faults3% = faults3% + PCS_1_Fault_3@
faults3% = faults3% + PCS_1_Fault_4@
faults3% = faults3% + PCS_1_Fault_5@
faults3% = faults3% + PCS_1_Fault_6@
faults3% = faults3% + PCS_1_Fault_7@
faults3% = faults3% + PCS_1_Fault_8@
faults3% = faults3% + PCS_1_Fault_9@
faults3% = faults3% + PCS_1_Fault_10@
faults3% = faults3% + PCS_1_Fault_11@
faults3% = faults3% + PCS_1_Fault_12@
faults3% = faults3% + PCS_1_Fault_13@
faults3% = faults3% + PCS_1_Fault_14@
faults3% = faults3% + PCS_1_Fault_15@
faults3% = faults3% + PCS_1_Fault_16@
faults3% = faults3% + PCS_1_Fault_17@
faults3% = faults3% + PCS_1_Fault_18@
faults3% = faults3% + PCS_1_Fault_19@
faults3% = faults3% + PCS_1_Fault_20@
faults3% = faults3% + PCS_1_Fault_21@
faults3% = faults3% + PCS_1_Fault_22@
faults3% = faults3% + PCS_1_Fault_23@
faults3% = faults3% + PCS_1_Fault_24@
faults3% = faults3% + PCS_1_Fault_25@
faults3% = faults3% + PCS_1_Fault_26@
faults3% = faults3% + PCS_1_Fault_27@
faults3% = faults3% + PCS_1_Fault_28@
faults3% = faults3% + PCS_1_Fault_29@
faults3% = faults3% + PCS_1_Fault_30@
faults3% = faults3% + PCS_1_Fault_31@
faults3% = faults3% + PCS_1_Fault_32@
faults3% = faults3% + PCS_1_Fault_33@
faults3% = faults3% + PCS_1_Fault_34@
faults3% = faults3% + PCS_1_Fault_35@
faults3% = faults3% + PCS_1_Fault_36@
faults3% = faults3% + PCS_1_Fault_37@
faults3% = faults3% + PCS_1_Fault_38@
faults3% = faults3% + PCS_1_Fault_39@
faults3% = faults3% + PCS_1_Fault_40@
faults3% = faults3% + PCS_1_Fault_41@
faults3% = faults3% + PCS_1_Fault_42@
faults3% = faults3% + PCS_1_Fault_43@
faults3% = faults3% + PCS_1_Fault_44@
faults3% = faults3% + PCS_1_Fault_45@
faults3% = faults3% + PCS_2_Fault_1@
faults3% = faults3% + PCS_2_Fault_2@
faults3% = faults3% + PCS_2_Fault_3@
faults3% = faults3% + PCS_2_Fault_4@
faults3% = faults3% + PCS_2_Fault_5@
faults3% = faults3% + PCS_2_Fault_6@
faults3% = faults3% + PCS_2_Fault_7@
faults3% = faults3% + PCS_2_Fault_8@
faults3% = faults3% + PCS_2_Fault_9@
faults3% = faults3% + PCS_2_Fault_10@
faults3% = faults3% + PCS_2_Fault_11@
faults3% = faults3% + PCS_2_Fault_12@
faults3% = faults3% + PCS_2_Fault_13@
faults3% = faults3% + PCS_2_Fault_14@
faults3% = faults3% + PCS_2_Fault_15@
faults3% = faults3% + PCS_2_Fault_16@
faults3% = faults3% + PCS_2_Fault_17@
faults3% = faults3% + PCS_2_Fault_18@
faults3% = faults3% + PCS_2_Fault_19@
faults3% = faults3% + PCS_2_Fault_20@
faults3% = faults3% + PCS_2_Fault_21@
faults3% = faults3% + PCS_2_Fault_22@
faults3% = faults3% + PCS_2_Fault_23@
faults3% = faults3% + PCS_2_Fault_24@
faults3% = faults3% + PCS_2_Fault_25@
faults3% = faults3% + PCS_2_Fault_26@
faults3% = faults3% + PCS_2_Fault_27@
faults3% = faults3% + PCS_2_Fault_28@
faults3% = faults3% + PCS_2_Fault_29@
faults3% = faults3% + PCS_2_Fault_30@
faults3% = faults3% + PCS_2_Fault_31@
faults3% = faults3% + PCS_2_Fault_32@
faults3% = faults3% + PCS_2_Fault_33@
faults3% = faults3% + PCS_2_Fault_34@
faults3% = faults3% + PCS_2_Fault_35@
faults3% = faults3% + PCS_2_Fault_36@
faults3% = faults3% + PCS_2_Fault_37@
faults3% = faults3% + PCS_2_Fault_38@
faults3% = faults3% + PCS_2_Fault_39@
faults3% = faults3% + PCS_2_Fault_40@
faults3% = faults3% + PCS_2_Fault_41@
faults3% = faults3% + PCS_2_Fault_42@
faults3% = faults3% + PCS_2_Fault_43@
faults3% = faults3% + PCS_2_Fault_44@
faults3% = faults3% + PCS_2_Fault_45@
faults3% = faults3% + PCS_3_Fault_1@
faults3% = faults3% + PCS_3_Fault_2@
faults3% = faults3% + PCS_3_Fault_3@
faults3% = faults3% + PCS_3_Fault_4@
faults3% = faults3% + PCS_3_Fault_5@
faults3% = faults3% + PCS_3_Fault_6@
faults3% = faults3% + PCS_3_Fault_7@
faults3% = faults3% + PCS_3_Fault_8@
faults3% = faults3% + PCS_3_Fault_9@
faults3% = faults3% + PCS_3_Fault_10@
faults3% = faults3% + PCS_3_Fault_11@
faults3% = faults3% + PCS_3_Fault_12@
faults3% = faults3% + PCS_3_Fault_13@
faults3% = faults3% + PCS_3_Fault_14@
faults3% = faults3% + PCS_3_Fault_15@
faults3% = faults3% + PCS_3_Fault_16@
faults3% = faults3% + PCS_3_Fault_17@
faults3% = faults3% + PCS_3_Fault_18@
faults3% = faults3% + PCS_3_Fault_19@
faults3% = faults3% + PCS_3_Fault_20@
faults3% = faults3% + PCS_3_Fault_21@
faults3% = faults3% + PCS_3_Fault_22@
faults3% = faults3% + PCS_3_Fault_23@
faults3% = faults3% + PCS_3_Fault_24@
faults3% = faults3% + PCS_3_Fault_25@
faults3% = faults3% + PCS_3_Fault_26@
faults3% = faults3% + PCS_3_Fault_27@
faults3% = faults3% + PCS_3_Fault_28@
faults3% = faults3% + PCS_3_Fault_29@
faults3% = faults3% + PCS_3_Fault_30@
faults3% = faults3% + PCS_3_Fault_31@
faults3% = faults3% + PCS_3_Fault_32@
faults3% = faults3% + PCS_3_Fault_33@
faults3% = faults3% + PCS_3_Fault_34@
faults3% = faults3% + PCS_3_Fault_35@
faults3% = faults3% + PCS_3_Fault_36@
faults3% = faults3% + PCS_3_Fault_37@
faults3% = faults3% + PCS_3_Fault_38@
faults3% = faults3% + PCS_3_Fault_39@
faults3% = faults3% + PCS_3_Fault_40@
faults3% = faults3% + PCS_3_Fault_41@
faults3% = faults3% + PCS_3_Fault_42@
faults3% = faults3% + PCS_3_Fault_43@
faults3% = faults3% + PCS_3_Fault_44@
faults3% = faults3% + PCS_3_Fault_45@
//for the faults1% variable, true is fine, while the Fault_Comms false is fine
IF faults1% THEN
    Fault_Comms@ = 1
ELSE
    Fault_Comms@ = 0
ENDIF
IF faults2% THEN
  EMS_Mem@ = 1
 ELSE
  EMS_Mem@ = 0
ENDIF
IF faults4% THEN
  EMS_Alarm_Mem@ = 1
 ELSE
  EMS_Alarm_Mem@ = 0
ENDIF
IF faults3% THEN
  Fault_Mem@ = 1
ELSE
  Fault_Mem@ = 0
ENDIF
 
Rem --- eWON user (end)
End
Rem --- eWON end section: Faults
Rem --- eWON start section: UPS Check
Rem --- eWON user (start)
ups_alert:
UPS_MODE@ = EMS_System_Status@#3
  min_soc = EMS_SoC_1@
  IF EMS_SoC_2@ < min_soc THEN
    min_soc = EMS_SoC_2@
  ENDIF
  IF EMS_SoC_3@ < min_soc THEN
    min_soc = EMS_SoC_3@
  ENDIF
Goto "LED"
Rem --- eWON user (end)
End
Rem --- eWON end section: UPS Check
Rem --- eWON start section: UPS_Email Check
Rem --- eWON user (start)
Email_Check:
//E-MAIL Alerts
IF UPS_MODE@ THEN
  IF (UPS_email_customer% = 0) THEN
    UPS_email_customer% = 1
    @send_email_cust(UPS_email_customer%)        
    @send_sms(UPS_email_customer%)
  ENDIF  
  
  IF NOT(email_sent_UPS%) THEN
    email_sent_UPS% = 1
    @send_email_eng()
  ENDIF
  
    IF((email_warning% = 0) AND ((EMS_SoC_1@ <= 15) OR (EMS_SoC_2@ <= 15) OR (EMS_SoC_3@ <= 15))) THEN
      email_warning% = 1
      @send_warning()
    ENDIF
ENDIF
IF NOT(UPS_MODE@) THEN
    email_warning% = 0
    email_sent_UPS% = 0
    start_email_timer% = 0    
    IF (UPS_email_customer% = 1) THEN
      UPS_email_customer% = 0
      @send_email_cust(UPS_email_customer%)    
      @send_sms(UPS_email_customer%)
    ENDIF
ENDIF
IF email_sent_UPS% THEN
  IF start_email_timer% = 0 THEN
    start_email_timer% = 1
    time_save% = GETSYS PRG, "TIMESEC"
  ENDIF
    
  IF start_email_timer% = 1 THEN
    current_time% = GETSYS PRG, "TIMESEC"
    IF ((current_time% - time_save%) >= (5 * 60)) THEN
      start_email_timer% = 0
      email_sent_UPS% = 0
     // @send_email_eng()
    ENDIF
  ENDIF
ENDIF
Goto "G59_Check"
Rem --- eWON user (end)
End
Rem --- eWON end section: UPS_Email Check
Rem --- eWON start section: e-mail
Rem --- eWON user (start)
// 5 Minute info
FUNCTION send_email_eng  
  @TIME_TO_STRING()
  Print "Sending e-mail"
  avg_soc = (EMS_SoC_1@ + EMS_SoC_2@ + EMS_SoC_3@) / 3
  IF (Meter_Load_Active_Power@ > 0) THEN
    divisor% = Meter_Load_Active_Power@
    meter_float = Meter_Load_Active_Power@
  ELSE
    divisor% = Meter_Load_Active_Power@
    meter_float = Meter_Load_Active_Power@
  ENDIF
  ups_time% = (1130 * 60 * (avg_soc / 100) * (BMS_1_SoH@ / 100) * 0.75) / meter_float
  M2$ = SFMT ups_time%,30,0,"%1d"  
  M3$ = SFMT meter_float,20,4,"%f"
  Print avg_soc
  SOC$ =  SFMT avg_soc,20,4,"%f"
  
  M1$ = "Virtue UPS Mode Alert" + NL$ + "UPS Mode: Activated" + NP$ + "You have around "  
  M1$ = M1$ + M2$ + " minutes of power left at the current load of " + M3$ + " kW"
  M1$ = M1$ + NP$ + "State of Charge is: " + SOC$ + "%" + NP$
  
  M1$ = M1$ + "TIME : " + HOUR$ + ":" + MINUTE$ + NL$ + "DATE : " + DAY_1$ + "/" + MONTH_1$ + "/" + YEAR_1$
   
  Message$ = M1$   
 
  //SENDMAIL E1$, E2$;E3$, "Virtue UPS Mode Alert", Message$
  SENDMAIL E1$,"","Virtue UPS Mode Alert", Message$
  SENDMAIL E2$,"","Virtue UPS Mode Alert", Message$
  Print"Engineer email sent"
ENDFN
// Back to normal
FUNCTION send_email_cust($ups_mode%) 
  @TIME_TO_STRING()
  Mes1$ = "Virtue Customer Notification" + NP$ + "UPS "
  Mes2$ = ""
  IF($ups_mode% = 0) THEN
    Mes2$ = "Deactivated. Mains Power restored"+ NP$ + "System status: Standby"
  ELSE
    Mes2$ = "Activated, Facility running on batteries" + NP$ + "System status: Running"
  ENDIF  
  
  Msg$ = Mes1$ + Mes2$ + NP$
  
  Msg$ = Msg$ + "TIME : " + HOUR$ + ":" + MINUTE$ + NL$ + "DATE : " + DAY_1$ + "/" + MONTH_1$ + "/" + YEAR_1$
  
  //SENDMAIL E1$, E2$, "Virtue UPS Mode Alert", Msg$
  SENDMAIL E1$,"", "Virtue UPS Mode Alert", Msg$
  SENDMAIL E2$,"", "Virtue UPS Mode Alert", Msg$
  Print"Customer email sent"
ENDFN
// Critical Battery Warning
FUNCTION send_warning()     
  @TIME_TO_STRING()
  SOC$ =  SFMT min_soc,20,4,"%f" 
  
  M1$ = "Virtue UPS Mode Alert" + NL$ + "Battery Low Warning" + NP$   
  M1$ = M1$ + NP$ + "State of Charge is: " + SOC$ + "%"   
  MW$ = "Recommended Action: Shut down critical applications"
  M1$ = M1$ + NP$ + MW$ + NP$
  M1$ = M1$ + "TIME : " + HOUR$ + ":" + MINUTE$ + NL$ + "DATE : " + DAY_1$ + "/" + MONTH_1$ + "/" + YEAR_1$
  Message$ = M1$
 
  //SENDMAIL E1$,E2$, "Virtue UPS CRITICAL BATTERY WARNING", Message$
  SENDMAIL E1$,"", "Virtue UPS CRITICAL BATTERY WARNING", Message$
  SENDMAIL E2$,"", "Virtue UPS CRITICAL BATTERY WARNING", Message$
  Print"15% Warning email sent"
ENDFN
Rem --- eWON user (end)
End
Rem --- eWON end section: e-mail
Rem --- eWON start section: FTP
Rem --- eWON user (start)
SendData:
T$ = Time$
year$ = T$(7 To 10)
mon$ = T$(4 To 5)
date$ = T$(1 To 2)
hour$ = T$(12 To 13)
min$ = T$(15 To 16)
sec$ = T$(18 To 19)
IF ftp_counter% = 2 THEN
  File1$ = "Bemis/SoC_1-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File1$,"[$dtHL $ftT $st_d7 $et_s0 $tnEMS_SoC_1]"
  Print "FTP 1"
ENDIF
IF ftp_counter% = 3 THEN
  File2$ = "Bemis/SoC_2-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File2$,"[$dtHL $ftT $st_d7 $et_s0 $tnEMS_SoC_2]"
  Print "FTP 2"
ENDIF
IF ftp_counter% = 4 THEN
  File3$ = "Bemis/SoC_3-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File3$,"[$dtHL $ftT $st_d7 $et_s0 $tnEMS_SoC_3]"
  Print "FTP 3"
ENDIF
IF ftp_counter% = 5 THEN
  File4$ = "Bemis/Meter_Supply_Vph1-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File4$,"[$dtHL $ftT $st_d7 $et_s0 $tnMeter_Supply_Vph1]"
  Print "FTP 4"
ENDIF
IF ftp_counter% = 6 THEN
  File5$ = "Bemis/Meter_Supply_Act_Power-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File5$,"[$dtHL $ftT $st_d7 $et_s0 $tnMeter_Supply_Active_Power]"
  Print "FTP 5"
ENDIF
IF ftp_counter% = 7 THEN
  File6$ = "Bemis/Meter_Load_Act_Power-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File6$,"[$dtHL $ftT $st_d7 $et_s0 $tnMeter_Load_Active_Power]"
  Print "FTP 6"
ENDIF
IF ftp_counter% = 8 THEN
  File7$ = "Bemis/BMS_Current-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File7$,"[$dtHL $ftT $st_d7 $et_s0 $tnBMS_Current]"
  Print "FTP 7"
ENDIF
IF ftp_counter% = 9 THEN
  File7$ = "Bemis/PCS_Act_P-" + date$ + "-" + mon$ + "-" + year$ + ".csv"
  PUTFTP File7$,"[$dtHL $ftT $st_d7 $et_s0 $tnPCS_T_Pact]"
  Print "FTP 8"
ENDIF
 	
Rem --- eWON user (end)
End
Rem --- eWON end section: FTP
Rem --- eWON start section: Beacon
Rem --- eWON user (start)
LED:
IF UPS_Mode@ THEN
  UPS_Warning_Light@ = 1
  IF (min_soc <= 15) THEN 
    UPS_Cricitical_Light@ = 1
  ELSE
    UPS_Cricitical_Light@ = 0
  ENDIF
ELSE  
  UPS_Cricitical_Light@ = 0
  UPS_Warning_Light@ = 0
ENDIF 
Goto "Email_Check"
Rem --- eWON user (end)
End
Rem --- eWON end section: Beacon
Rem --- eWON start section: G59
Rem --- eWON user (start)
G59_Check:
PCS_Counter% = 0
IF PCS_1_Work_Status@#1 OR PCS_1_Work_Status@#16 OR PCS_1_Work_Status@#17 THEN
  PCS_Counter% = PCS_Counter% + 1
ENDIF
IF PCS_2_Work_Status@#1 OR PCS_2_Work_Status@#16 OR PCS_2_Work_Status@#17 THEN
  PCS_Counter% = PCS_Counter% + 1
ENDIF
IF PCS_3_Work_Status@#1 OR PCS_3_Work_Status@#16 OR PCS_3_Work_Status@#17 THEN
  PCS_Counter% = PCS_Counter% + 1
ENDIF
IF PCS_Counter% > 1 THEN
  G59_A@ = 0
  G59_B@ = 0
ELSE
  G59_A@ = 1
  G59_B@ = 1
ENDIF
Rem --- eWON user (end)
End
Rem --- eWON end section: G59
Rem --- eWON start section: SMS Messages
Rem --- eWON user (start)
FUNCTION send_sms($ups_mode%)  
  @TIME_TO_STRING()
  D$ = "00447958195005,gsm,0;00447785345252,gsm,0;00447967822085,gsm,0;00447748630420,gsm,0;00447738851432,gsm,0;00447738851433,gsm,0;00447738851441,gsm,0;00447785345252,gsm,0;00447515939629,gsm,0;00447738851439,gsm,0"
  SMS_Msg$ = "UPS Alert: "
  IF($ups_mode% = 0) THEN
    SMS_Msg$ = SMS_Msg$ + "Deactivated"
  ELSE
    SMS_Msg$ = SMS_Msg$ + "Activated" + NP$
  ENDIF
    
    SMS_Msg$ = SMS_Msg$ + "TIME : " + HOUR$ + ":" + MINUTE$ + NL$ + "DATE : " + DAY_1$ + "/" + MONTH_1$ + "/" + YEAR_1$
  SENDSMS D$, SMS_Msg$
  Print "Msg Sent"  
ENDFN
Rem --- eWON user (end)
End
Rem --- eWON end section: SMS Messages
Rem --- eWON start section: test
Rem --- eWON user (start)
test123:   
  @TIME_TO_STRING()
  Message$ = "Virtue Test E-mail" + NP$
  Message$ = Message$ + "TIME : " + HOUR$ + ":" + MINUTE$ + NL$ + "DATE : " + DAY_1$ + "/" + MONTH_1$ + "/" + YEAR_1$
 //SENDMAIL E1$,E2$, "Virtue Test E-mail", Message$
 //SENDMAIL E1$,"","Virtue Test E-mail", Message$
 //SENDMAIL E2$,"tom.csmith@powerstar.com","Virtue Test E-mail", Message$
 SENDMAIL "tom.csmith@powerstar.com","","Virtue Test E-mail", Message$
 Print"Test E-mail Sent"
 Print Message$
Rem --- eWON user (end)
End
Rem --- eWON end section: test
Rem --- eWON start section: Time
Rem --- eWON user (start)
FUNCTION TIME_TO_STRING()
  A$ = Time$
  H% = Val(A$(12 To 13))
  M% = Val(A$(15 To 16))
  D% = Val(A$(1 To 2))
  Z% = Val(A$(4 To 5))
  Y% = Val(A$(7 To 10))    
  HOUR$ = SFMT H%, 30, 0, "%d"
  MINUTE$ = SFMT M%, 30, 0, "%d"
  DAY_1$ = SFMT D%, 30, 0, "%d"
  MONTH_1$ = SFMT Z%, 30, 0, "%d"
  YEAR_1$ = SFMT Y%, 30, 0, "%d"
  
  IF H% < 10 THEN
    HOUR$ = "0" + HOUR$
  ENDIF
  
  IF M% < 10 THEN
    MINUTE$ = "0" + MINUTE$
  ENDIF
ENDFN
Rem --- eWON user (end)
End
Rem --- eWON end section: Time
Rem --- eWON start section: FTP New
Rem --- eWON user (start)
SendAllData:
T$ = Time$
year$ = T$(7 To 10)
mon$ = T$(4 To 5)
date$ = T$(1 To 2)
hour$ = T$(12 To 13)
min$ = T$(15 To 16)
sec$ = T$(18 To 19)
  
FileNameLogs$ =  "Bemis/Daily_Logs-" + year$ + "-" + mon$ + "-" + date$ + ".csv"
FileNameEvents$ = "Bemis/Daily_Events-" + year$ + "-" + mon$ + "-" + date$ + ".csv"
PUTFTP FileNameLogs$,"[$dtHT$ftT$st_d1$et_s0$flD]"
PUTFTP FileNameEvents$,"[$dtEV$st_d1$et_s0$ut$ut$ftT]"
Print "FTP Logs Sent"
Print "FTP Event Sent"
Rem --- eWON user (end)
End
Rem --- eWON end section: FTP New
Rem --- eWON start section: Check All PCS in VSG
Rem --- eWON user (start)
Check_PCS_VSG_BAK:
IF ((PCS_1_Work_Status@ <> 128) OR (PCS_2_Work_Status@ <> 128) OR (PCS_3_Work_Status@ <> 128)) THEN
//  AGG_DISABLE@ = 1
//  EMS_Power_Setpoint@ = 0
ELSE 
  //IF PCS_FAULT_FLAG% = 1 THEN
  PCS_FAULT_FLAG% = 0
  IF AGG_DISABLE_MAN@ Then  
    AGG_DISABLE@ = 1
  ELSE
    AGG_DISABLE@ = 0
  ENDIF
  //ENDIF
ENDIF
Rem --- eWON user (end)
End
Rem --- eWON end section: Check All PCS in VSG
Rem --- eWON start section: Get Month
Rem --- eWON user (start)
FUNCTION get_month$($month_v%)  
  IF $month_v% = 1 Then
    $get_month$ = "Jan"
  ENDIF
  IF $month_v% = 2 Then
    $get_month$ = "Feb"
  ENDIF
  IF $month_v% = 3 Then
    $get_month$ = "Mar"
  ENDIF
  IF $month_v% = 4 Then
    $get_month$ = "Apr"
  ENDIF
  IF $month_v% = 5 Then
    $get_month$ = "May"
  ENDIF
  IF $month_v% = 6 Then
    $get_month$ = "Jun"
  ENDIF
  IF $month_v% = 7 Then
    $get_month$ = "Jul"
  ENDIF
  IF $month_v% = 8 Then
    $get_month$ = "Aug"
  ENDIF
  IF $month_v% = 9 Then
    $get_month$ = "Sep"
  ENDIF
  IF $month_v% = 10 Then
    $get_month$ = "Oct"
  ENDIF
  IF $month_v% = 11 Then
    $get_month$ = "Nov"
  ENDIF
  IF $month_v% = 12 Then
    $get_month$ = "Dec"
  ENDIF  
Return 
ENDFN
Rem --- eWON user (end)
End
Rem --- eWON end section: Get Month
Rem --- eWON start section: Status
Rem --- eWON user (start)
status:
eventId% = GETSYS PRG,"ACTIONID"
IF eventId% = getFtpId% THEN
  stat% = GETSYS PRG, "ACTIONSTAT"
  If stat% = 0 Then
    Print "put ftp"
    PUTFTP ftpDir$, ewonDir$
    putFtpId% = GETSYS PRG,"ACTIONID"
  ENDIF
ENDIF
IF eventId% = putFtpId% THEN
  stat% = GETSYS PRG, "ACTIONSTAT"
  If stat% = 0 Then
    Print "erase"    
    ERASE ewon_store_fn$
  ENDIF
ENDIF
Rem --- eWON user (end)
End
Rem --- eWON end section: Status
Rem --- eWON start section: PS Ftp
Rem --- eWON user (start)
PS_FTP:
  Site$ = "Bemis"
  Print "start"
  T$ = Time$
  year$ = T$(7 To 10)
  year_int% = Val(year$)  
  month_val% =  MONTH T$
  month_val% = month_val% - 1
  IF month_val% < 1 Then
    month_val% = 12
    year_int% = year_int% - 1    
    year$ = SFMT year_int%,30,0,"%1d"
  ENDIF
  FileName$ = "Basic" + year$ + @get_month$(month_val%)  + ".csv"
  HMI_File$ = "/StorageCard/data/" + FileName$
  ewon_store_fn$ = "/usr/" + FileName$
  ewonDir$ = "[$dtUF $uf/" + FileName$ + "]"
  ftpDir$ = Site$ + "/PS/" + FileName$
  GETFTP HMI_File$,ewon_store_fn$,":@10.0.33.241"
  getFtpId% = GETSYS PRG,"ACTIONID"
  
Rem --- eWON user (end)
End
Rem --- eWON end section: PS Ftp
Rem --- eWON start section: Comms_Update
Rem --- eWON user (start)
Check_Comms:
If Real_Comms_BMS_1@ = 1 Or Real_Comms_BMS_1@ = 2 Then
     Comms_BMS_1@ = 1
  Else
     Comms_BMS_1@ = 0
 ENDIF
If Real_Comms_BMS_2@ = 1 Or Real_Comms_BMS_2@ = 2 Then
     Comms_BMS_2@ = 1
  Else
     Comms_BMS_2@ = 0
 ENDIF
 
 If Real_Comms_BMS_3@ = 1 Or Real_Comms_BMS_3@ = 2 Then
     Comms_BMS_3@ = 1
  Else
     Comms_BMS_3@ = 0
 ENDIF
 
 
  Print "comms end done"
Rem --- eWON user (end)
End
Rem --- eWON end section: Comms_Update
Rem --- eWON start section: Virtual_Meter_Update
Rem --- eWON user (start)
Calculate_Meter_Readings:
Meter_Supply_Active_Power@=HMI_Active_Power@
Meter_Load_Active_Power@=HMI_Active_Power@
Print "Meter Calculation Done"
   
Rem --- eWON user (end)
End
Rem --- eWON end section: Virtual_Meter_Update